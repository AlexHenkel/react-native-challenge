// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`>>>App --- Snapshot render correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#FFF",
        "borderBottomColor": "#e32f66",
        "borderBottomWidth": 3,
        "paddingTop": 20,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#161616",
            "fontFamily": "Avenir-Black",
            "fontSize": 18,
            "marginTop": 5,
            "textAlign": "center",
          },
          undefined,
        ]
      }
    >
      myTODOS
    </Text>
    <Text
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {
            "color": "#e32f66",
            "fontSize": 24,
            "position": "absolute",
            "right": 10,
            "top": 24,
          },
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      testID={undefined}
    >
      
    </Text>
    <View
      style={
        Object {
          "backgroundColor": "rgba(179, 233, 199, 0.1)",
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#e32f66",
            "borderColor": "rgba(0, 0, 0, 0.0)",
            "borderRadius": 20,
            "borderWidth": 2,
            "height": 36,
            "marginBottom": 10,
            "marginTop": 10,
            "minWidth": 60,
            "opacity": 1,
            "overflow": "hidden",
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#DDD",
                "fontFamily": "Avenir-Black",
                "fontSize": 17,
                "paddingBottom": 5,
                "paddingTop": 5,
                "textAlign": "center",
              },
              Object {
                "color": "#FFF",
              },
            ]
          }
        >
          All
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0.0)",
            "borderColor": "#DDD",
            "borderRadius": 20,
            "borderWidth": 2,
            "height": 36,
            "marginBottom": 10,
            "marginTop": 10,
            "minWidth": 60,
            "opacity": 1,
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#DDD",
                "fontFamily": "Avenir-Black",
                "fontSize": 17,
                "paddingBottom": 5,
                "paddingTop": 5,
                "textAlign": "center",
              },
            ]
          }
        >
          Completed
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0.0)",
            "borderColor": "#DDD",
            "borderRadius": 20,
            "borderWidth": 2,
            "height": 36,
            "marginBottom": 10,
            "marginTop": 10,
            "minWidth": 60,
            "opacity": 1,
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#DDD",
                "fontFamily": "Avenir-Black",
                "fontSize": 17,
                "paddingBottom": 5,
                "paddingTop": 5,
                "textAlign": "center",
              },
            ]
          }
        >
          Pending - 0
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    style={
      Object {
        "backgroundColor": "#D0E0DD",
      }
    }
  >
    <View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#e32f66",
              "fontSize": 34,
              "fontWeight": "bold",
              "marginTop": 20,
              "textAlign": "center",
            }
          }
        >
          No tasks yet :(
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#e32f66",
              "fontSize": 34,
              "fontWeight": "bold",
              "marginTop": 20,
              "textAlign": "center",
            }
          }
        >
          Let's add something fun
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`>>>CustomList --- Snapshot render correctly 1`] = `
<RCTScrollView
  style={
    Object {
      "backgroundColor": "#D0E0DD",
    }
  }
>
  <View>
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#e32f66",
            "fontSize": 34,
            "fontWeight": "bold",
            "marginTop": 20,
            "textAlign": "center",
          }
        }
      >
        No tasks yet :(
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#e32f66",
            "fontSize": 34,
            "fontWeight": "bold",
            "marginTop": 20,
            "textAlign": "center",
          }
        }
      >
        Let's add something fun
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`>>>Header --- Snapshot render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFF",
      "borderBottomColor": "#e32f66",
      "borderBottomWidth": 3,
      "paddingTop": 20,
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#161616",
          "fontFamily": "Avenir-Black",
          "fontSize": 18,
          "marginTop": 5,
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    myTODOS
  </Text>
  <Text
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    allowFontScaling={false}
    ellipsizeMode="tail"
    hitSlop={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 12,
        },
        Object {
          "color": "#e32f66",
          "fontSize": 24,
          "position": "absolute",
          "right": 10,
          "top": 24,
        },
        Object {
          "fontFamily": "Material Icons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
    testID={undefined}
  >
    
  </Text>
  <View
    style={
      Object {
        "backgroundColor": "rgba(179, 233, 199, 0.1)",
        "flexDirection": "row",
        "justifyContent": "space-around",
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#e32f66",
          "borderColor": "rgba(0, 0, 0, 0.0)",
          "borderRadius": 20,
          "borderWidth": 2,
          "height": 36,
          "marginBottom": 10,
          "marginTop": 10,
          "minWidth": 60,
          "opacity": 1,
          "overflow": "hidden",
          "paddingLeft": 10,
          "paddingRight": 10,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#DDD",
              "fontFamily": "Avenir-Black",
              "fontSize": 17,
              "paddingBottom": 5,
              "paddingTop": 5,
              "textAlign": "center",
            },
            Object {
              "color": "#FFF",
            },
          ]
        }
      >
        All
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.0)",
          "borderColor": "#DDD",
          "borderRadius": 20,
          "borderWidth": 2,
          "height": 36,
          "marginBottom": 10,
          "marginTop": 10,
          "minWidth": 60,
          "opacity": 1,
          "paddingLeft": 10,
          "paddingRight": 10,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#DDD",
              "fontFamily": "Avenir-Black",
              "fontSize": 17,
              "paddingBottom": 5,
              "paddingTop": 5,
              "textAlign": "center",
            },
          ]
        }
      >
        Completed
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.0)",
          "borderColor": "#DDD",
          "borderRadius": 20,
          "borderWidth": 2,
          "height": 36,
          "marginBottom": 10,
          "marginTop": 10,
          "minWidth": 60,
          "opacity": 1,
          "paddingLeft": 10,
          "paddingRight": 10,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#DDD",
              "fontFamily": "Avenir-Black",
              "fontSize": 17,
              "paddingBottom": 5,
              "paddingTop": 5,
              "textAlign": "center",
            },
          ]
        }
      >
        Pending - 0
      </Text>
    </View>
  </View>
</View>
`;

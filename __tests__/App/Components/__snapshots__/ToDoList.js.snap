// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#FFF",
        "borderBottomColor": "#e32f66",
        "borderBottomWidth": 3,
        "paddingTop": 20,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#161616",
            "fontFamily": "Avenir-Black",
            "fontSize": 18,
            "marginTop": 5,
            "textAlign": "center",
          },
          undefined,
        ]
      }
    >
      myTODOS
    </Text>
    <Text
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {
            "color": "#e32f66",
            "fontSize": 24,
            "position": "absolute",
            "right": 10,
            "top": 24,
          },
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      testID={undefined}
    >
      î……
    </Text>
    <View
      style={
        Object {
          "backgroundColor": "rgba(179, 233, 199, 0.1)",
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#e32f66",
            "borderColor": "rgba(0, 0, 0, 0.0)",
            "borderRadius": 20,
            "borderWidth": 2,
            "height": 36,
            "marginBottom": 10,
            "marginTop": 10,
            "minWidth": 70,
            "opacity": 1,
            "overflow": "hidden",
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#DDD",
                "fontFamily": "Avenir-Black",
                "fontSize": 17,
                "paddingBottom": 5,
                "paddingTop": 5,
                "textAlign": "center",
              },
              Object {
                "color": "#FFF",
              },
            ]
          }
        >
          All
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0.0)",
            "borderColor": "#DDD",
            "borderRadius": 20,
            "borderWidth": 2,
            "height": 36,
            "marginBottom": 10,
            "marginTop": 10,
            "minWidth": 70,
            "opacity": 1,
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#DDD",
                "fontFamily": "Avenir-Black",
                "fontSize": 17,
                "paddingBottom": 5,
                "paddingTop": 5,
                "textAlign": "center",
              },
            ]
          }
        >
          Completed
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0.0)",
            "borderColor": "#DDD",
            "borderRadius": 20,
            "borderWidth": 2,
            "height": 36,
            "marginBottom": 10,
            "marginTop": 10,
            "minWidth": 70,
            "opacity": 1,
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#DDD",
                "fontFamily": "Avenir-Black",
                "fontSize": 17,
                "paddingBottom": 5,
                "paddingTop": 5,
                "textAlign": "center",
              },
            ]
          }
        >
          Pending
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    style={
      Object {
        "backgroundColor": "#D0E0DD",
      }
    }
  >
    <View>
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        dataSource={
          ListViewDataSource {
            "items": 4,
          }
        }
        enableEmptySections={true}
        refreshControl={
          <RefreshControlMock
            refreshing={false}
          />
        }
        renderRow={[Function]}
        renderScrollComponent={[Function]}
      >
        <RCTRefreshControl />
        <View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#dbddde",
                  "overflow": "hidden",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {},
                  Object {
                    "left": 0,
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "borderBottomColor": "#e32f66",
                    "borderBottomWidth": 3,
                  }
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Object {
                        "backgroundColor": "#FFF",
                        "margin": 0,
                        "padding": 10,
                      },
                    ]
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Image
                      source={1}
                    />
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "marginLeft": 10,
                          },
                          Object {
                            "fontFamily": "Avenir",
                            "fontSize": 17,
                          },
                        ]
                      }
                    >
                      Drink water
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View />
            <View />
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#dbddde",
                  "overflow": "hidden",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {},
                  Object {
                    "left": 0,
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "borderBottomColor": "#e32f66",
                    "borderBottomWidth": 3,
                  }
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Object {
                        "backgroundColor": "#FFF",
                        "margin": 0,
                        "padding": 10,
                      },
                    ]
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Image
                      source={1}
                    />
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "marginLeft": 10,
                          },
                          Object {
                            "fontFamily": "Avenir",
                            "fontSize": 17,
                          },
                        ]
                      }
                    >
                      Go to the gym
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View />
            <View />
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#dbddde",
                  "overflow": "hidden",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {},
                  Object {
                    "left": 0,
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "borderBottomColor": "#e32f66",
                    "borderBottomWidth": 3,
                  }
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Object {
                        "backgroundColor": "#FFF",
                        "margin": 0,
                        "padding": 10,
                      },
                    ]
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Image
                      source={1}
                    />
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "marginLeft": 10,
                          },
                          Object {
                            "fontFamily": "Avenir",
                            "fontSize": 17,
                          },
                        ]
                      }
                    >
                      Do homework
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View />
            <View />
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#dbddde",
                  "overflow": "hidden",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
              ]
            }
          >
            <View
              onLayout={[Function]}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {},
                  Object {
                    "left": 0,
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "borderBottomColor": "#e32f66",
                    "borderBottomWidth": 3,
                  }
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Object {
                        "backgroundColor": "#FFF",
                        "margin": 0,
                        "padding": 10,
                      },
                    ]
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Image
                      source={1}
                    />
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "marginLeft": 10,
                          },
                          Object {
                            "fontFamily": "Avenir",
                            "fontSize": 17,
                          },
                        ]
                      }
                    >
                      Watch TV
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View />
            <View />
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
</View>
`;
